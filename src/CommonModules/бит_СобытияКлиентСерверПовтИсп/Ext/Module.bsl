#Область ПрограммныйИнтерфейс

// Функция - Получить обработчик события формы
//
// Параметры:
//  ИмяСобытия	 - Строка	 - Событие формы
//  ИмяФормы	 - Строка	 - Имя формы
// 
// Возвращаемое значение:
//   Строка - Возвращается имя обработчика формы для выполнения 
//
&НаСервере
Функция ПолучитьОбработчикСобытияФормыСервер(ИмяСобытия, ИмяФормы) Экспорт
	
	СоответствиеСобытий = Новый Соответствие;
	СоответствиеСобытий.Вставить("ПриСозданииНаСервере", ПолучитьОбработчикиПриСозданииНаСервере());
	СоответствиеСобытий.Вставить("ПередЗаписьюНаСервере", ПолучитьОбработчикиПередЗаписьюНаСервере());
	СоответствиеСобытий.Вставить("ПослеЗаписиНаСервере", ПолучитьОбработчикиПослеЗаписиНаСервере());
	
	СоответствиеСобытия = СоответствиеСобытий.Получить(ИмяСобытия);
	Если СоответствиеСобытия <> Неопределено Тогда
		Возврат СоответствиеСобытия.Получить(ИмяФормы);	
	КонецЕсли;
	
КонецФункции

// Функция - Получить обработчик события формы клиент
//
// Параметры:
//  ИмяСобытия	 - Строка	 - Событие формы
//  ИмяФормы	 - Строка	 - Имя формы
// 
// Возвращаемое значение:
//   Строка - Возвращается имя обработчика формы для выполнения 
//
&НаКлиенте
Функция ПолучитьОбработчикСобытияФормыКлиент(ИмяСобытия, ИмяФормы) Экспорт
	
	СоответствиеСобытий = Новый Соответствие;
	СоответствиеСобытий.Вставить("ОбработкаОповещения", ПолучитьОбработчикиОбработкаОповещения());
	СоответствиеСобытий.Вставить("ПриОткрытии", ПолучитьОбработчикиПриОткрытии());
	СоответствиеСобытий.Вставить("ПередЗаписью", ПолучитьОбработчикиПередЗаписью());
	СоответствиеСобытия = СоответствиеСобытий.Получить(ИмяСобытия);
	Если СоответствиеСобытия <> Неопределено Тогда
		Возврат СоответствиеСобытия.Получить(ИмяФормы);	
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Сервер

// Функция - Получить обработчики при создании на сервере
// 
// Возвращаемое значение:
//  Соответствие - Возвращает соответствие форм и обработчиков события ПриСозданииНаСервере
//
&НаСервере
Функция ПолучитьОбработчикиПриСозданииНаСервере()
	
	мсФорм = Новый Массив;
	//ПРИМЕР:
	//мсФорм.Добавить("Документ.ОказаниеУслуг.Форма.ФормаДокументаУпр"); //+бит.Сидорук.2021.10.24
	
	Шаблон = "ПриСозданииНаСервере_%1";
	соотСобытия = СформироватьСоответствиеПоМассивуФорм(Шаблон, мсФорм);
	Возврат соотСобытия;
	
КонецФункции

&НаСервере
Функция ПолучитьОбработчикиПередЗаписьюНаСервере()
	
	мсФорм = Новый Массив;
	//ПРИМЕР:
	//мсФорм.Добавить("Документ.ОказаниеУслуг.Форма.ФормаДокументаУпр"); //+бит.Сидорук.2021.10.24
	
	Шаблон = "ПередЗаписьюНаСервере_%1";
	соотСобытия = СформироватьСоответствиеПоМассивуФорм(Шаблон, мсФорм);
	Возврат соотСобытия;
	
КонецФункции

&НаСервере
Функция ПолучитьОбработчикиПослеЗаписиНаСервере()
	
	мсФорм = Новый Массив;
	//ПРИМЕР:
	//мсФорм.Добавить("Документ.ОказаниеУслуг.Форма.ФормаДокументаУпр"); //+бит.Сидорук.2021.10.24
	
	Шаблон = "ПослеЗаписиНаСервере_%1";
	соотСобытия = СформироватьСоответствиеПоМассивуФорм(Шаблон, мсФорм);
	Возврат соотСобытия;
	
КонецФункции

#КонецОбласти

#Область Клиент

// Функция - Получить обработчики оповещения
// 
// Возвращаемое значение:
//  Соответствие - Возвращает соответствие форм и обработчиков события ОбработкаОповещения
//
&НаКлиенте
Функция ПолучитьОбработчикиОбработкаОповещения()
	
	мсФорм = Новый Массив;
	//ПРИМЕР:
	//мсФорм.Добавить("Документ.ОказаниеУслуг.Форма.ФормаДокументаУпр"); //+бит.Сидорук.2021.10.24
	
	Шаблон = "ОбработкаОповещения_%1";
	соотСобытия = СформироватьСоответствиеПоМассивуФорм(Шаблон, мсФорм);
	Возврат соотСобытия;
	
КонецФункции

&НаКлиенте
Функция ПолучитьОбработчикиПриОткрытии()
	
	мсФорм = Новый Массив;
	//ПРИМЕР:
	//мсФорм.Добавить("Документ.ОказаниеУслуг.Форма.ФормаДокументаУпр"); //+бит.Сидорук.2021.10.24
	
	Шаблон = "ПриОткрытии_%1";
	соотСобытия = СформироватьСоответствиеПоМассивуФорм(Шаблон, мсФорм);
	Возврат соотСобытия;
	
КонецФункции

&НаКлиенте
Функция ПолучитьОбработчикиПередЗаписью()
	
	мсФорм = Новый Массив;
	//ПРИМЕР:
	//мсФорм.Добавить("Документ.ОказаниеУслуг.Форма.ФормаДокументаУпр"); //+бит.Сидорук.2021.10.24
	
	Шаблон = "ПередЗаписью_%1";
	соотСобытия = СформироватьСоответствиеПоМассивуФорм(Шаблон, мсФорм);
	Возврат соотСобытия;
	
КонецФункции

#КонецОбласти

Функция СформироватьСоответствиеПоМассивуФорм(Шаблон, МассивФорм)
	
	соотСобытия = Новый Соответствие;
	
	Для Каждого Форма Из МассивФорм Цикл
		ИмяФормы = СтрЗаменить(Форма, ".Форма.", "_");
		ИмяФормы = СтрЗаменить(ИмяФормы, ".", "");
		соотСобытия.Вставить(Форма, СтрШаблон(Шаблон, ИмяФормы));
		//Имя формы приводится к ИмяСобытия_ОбъектМетаданныхИмяОбъектаМетаданных_ИмяФормы
	КонецЦикла;
	
	Возврат соотСобытия;
	
КонецФункции

#КонецОбласти

